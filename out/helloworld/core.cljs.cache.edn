;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros}, :excludes #{}, :name helloworld.core, :imports nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, async cljs.core.async, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async}, :defs {jsp-rows {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([str]))}, :name helloworld.core/jsp-rows, :variadic false, :file "src/helloworld/core.cljs", :end-column 15, :method-params ([str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([str]))}, js-request {:name helloworld.core/js-request, :file "src/helloworld/core.cljs", :line 15, :column 1, :end-line 15, :end-column 16, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 15, :column 6, :end-line 15, :end-column 16}}, express {:name helloworld.core/express, :file "src/helloworld/core.cljs", :line 11, :column 1, :end-line 11, :end-column 17, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 11, :column 10, :end-line 11, :end-column 17}}, say-hello2 {:name helloworld.core/say-hello2, :file "src/helloworld/core.cljs", :line 12, :column 1, :end-line 12, :end-column 16, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 12, :column 6, :end-line 12, :end-column 16}}, serve-static {:name helloworld.core/serve-static, :file "src/helloworld/core.cljs", :line 13, :column 1, :end-line 13, :end-column 22, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 13, :column 10, :end-line 13, :end-column 22}}, request {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 17, :column 7, :end-line 17, :end-column 14, :arglists (quote ([url-or-opts callback]))}, :name helloworld.core/request, :variadic false, :file "src/helloworld/core.cljs", :end-column 14, :method-params ([url-or-opts callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url-or-opts callback]))}, -main {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 70, :column 6, :end-line 70, :end-column 11}, :name helloworld.core/-main, :variadic false, :file "src/helloworld/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists nil}, say-hello1! {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 38, :column 7, :end-line 38, :end-column 18, :arglists (quote ([req res]))}, :name helloworld.core/say-hello1!, :variadic false, :file "src/helloworld/core.cljs", :end-column 18, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, cl-rows {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 22, :column 7, :end-line 22, :end-column 14, :arglists (quote ([str]))}, :name helloworld.core/cl-rows, :variadic false, :file "src/helloworld/core.cljs", :end-column 14, :method-params ([str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([str]))}, hellow {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 54, :column 7, :end-line 54, :end-column 13, :arglists (quote ([req res]))}, :name helloworld.core/hellow, :variadic false, :file "src/helloworld/core.cljs", :end-column 13, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}, app {:name helloworld.core/app, :file "src/helloworld/core.cljs", :line 27, :column 1, :end-line 27, :end-column 9, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 27, :column 6, :end-line 27, :end-column 9}}, http {:name helloworld.core/http, :file "src/helloworld/core.cljs", :line 14, :column 1, :end-line 14, :end-column 14, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 14, :column 10, :end-line 14, :end-column 14}}, say-hello! {:protocol-inline nil, :meta {:file "/Users/raj/projects/helloworld/src/helloworld/core.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([req res]))}, :name helloworld.core/say-hello!, :variadic false, :file "src/helloworld/core.cljs", :end-column 17, :method-params ([req res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([req res]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :method :name :recur :id :uri :doc :keywordize-keys}, :order [:keywordize-keys :method :uri :id :name :doc :recur :else]}, :doc nil}